<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAwAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAG
        jAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAGjAAaMABowAH//Z
</value>
  </data>
</root>